import os
import logging
from telegram import Update
from telegram.ext import Updater, CommandHandler, CallbackContext
from datetime import date

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

DATA = {}

def profit(update: Update, context: CallbackContext):
    try:
        buy = float(context.args[0])
        sell = float(context.args[1])
        p = sell - buy
        pct = (p / buy) * 100 if buy else 0
        today = date.today().isoformat()
        DATA.setdefault(today, []).append(p)
        update.message.reply_text(f"âœ… Ø§Ù„Ø±Ø¨Ø­: {p:.2f} Ø¯Ø¬\nðŸ“Š Ø§Ù„Ù†Ø³Ø¨Ø©: {pct:.2f}%")
    except:
        update.message.reply_text("Ø§Ø³ØªØ¹Ù…Ù„: /Ø±Ø¨Ø­ Ø³Ø¹Ø±_Ø§Ù„Ø´Ø±Ø§Ø¡ Ø³Ø¹Ø±_Ø§Ù„Ø¨ÙŠØ¹")

def total(update: Update, context: CallbackContext):
    today = date.today().isoformat()
    grand = sum(sum(v) for v in DATA.values())
    today_sum = sum(DATA.get(today, []))
    update.message.reply_text(f"ðŸ“… Ø§Ù„Ø±Ø¨Ø­ Ø§Ù„ÙŠÙˆÙ… ({today}): {today_sum:.2f} Ø¯Ø¬\nðŸ§¾ Ø§Ù„ÙƒÙ„ÙŠ: {grand:.2f} Ø¯Ø¬")

def reset(update: Update, context: CallbackContext):
    DATA.clear()
    update.message.reply_text("ðŸ”„ ØªÙ… Ø¥Ø¹Ø§Ø¯Ø© Ø¶Ø¨Ø· Ø§Ù„Ø¨ÙŠØ§Ù†Ø§Øª!")

def main():
    token = os.getenv("BOT_TOKEN")
    updater = Updater(token, use_context=True)
    dp = updater.dispatcher
    dp.add_handler(CommandHandler("Ø±Ø¨Ø­", profit))
    dp.add_handler(CommandHandler("Ù…Ø¬Ù…ÙˆØ¹", total))
    dp.add_handler(CommandHandler("Ø¥Ø¹Ø§Ø¯Ø©", reset))
    updater.start_polling()
    updater.idle()

if __name__ == "__main__":
    main()
